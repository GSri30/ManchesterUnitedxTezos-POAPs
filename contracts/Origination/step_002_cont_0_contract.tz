parameter (or (or (or (pair %approve (address %spender) (nat %value)) (pair %burn (address %address) (nat %value))) (or (pair %getAdministrator unit (contract address)) (or (pair %getAllowance (pair (address %owner) (address %spender)) (contract nat)) (pair %getBalance address (contract nat))))) (or (or (pair %getTotalSupply unit (contract nat)) (or (pair %mint (address %address) (nat %value)) (address %setAdministrator))) (or (bool %setPause) (or (pair %transfer (address %from) (pair (address %to) (nat %value))) (pair %update_metadata (string %key) (bytes %value))))));
storage   (pair (address %administrator) (pair (big_map %balances address (pair (map %approvals address nat) (nat %balance))) (pair (big_map %metadata string bytes) (pair (bool %paused) (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes))) (nat %total_supply))))));
code
  {
    # Private variable: is_administrator_ # pair @parameter @storage
    LAMBDA
      (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
      (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
      {
        CDR;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
        # return True # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
        PUSH bool True; # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
        PAIR;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))
      }; # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair @parameter @storage
    SWAP;       # pair @parameter @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
    # Private variable: is_paused_ # pair @parameter @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
    LAMBDA
      (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
      (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
      {
        CDR;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
        # return False # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
        PUSH bool False; # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
        PAIR;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))
      }; # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair @parameter @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
    SWAP;       # pair @parameter @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
    UNPAIR;     # @parameter : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                DIG 3;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%approve : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                DROP;       # @parameter%approve : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                # == approve ==
                # assert not self.is_paused_(), "FA1.2_Paused" # @parameter%approve : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%approve : @storage
                UNIT;       # unit : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%approve : @storage
                SWAP;       # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : unit : @parameter%approve : @storage
                DIG 3;      # @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : unit : @parameter%approve
                DIG 2;      # unit : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%approve
                PAIR;       # pair unit @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%approve
                EXEC;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%approve
                UNPAIR;     # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%approve
                SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : bool : @parameter%approve
                DUG 2;      # bool : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF
                  {
                    PUSH string "FA1.2_Paused"; # string : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # spender_balance = self.data.balances.get( # @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP 2;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                GET 3;      # big_map address (pair (map address nat) nat) : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                SENDER;     # @sender : big_map address (pair (map address nat) nat) : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                GET;        # option (pair (map address nat) nat) : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF_NONE
                  {
                    PUSH (pair (map address nat) nat) (Pair {} 0); # pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }
                  {}; # pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # alreadyApproved = spender_balance.approvals.get(param.spender, default=0) # pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP;        # pair (map address nat) nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CAR;        # map address nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP 3;      # @parameter%approve : map address nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CAR;        # address : map address nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                GET;        # option nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF_NONE
                  {
                    PUSH nat 0; # nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }
                  {}; # nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # assert ( # nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                PUSH nat 0; # nat : nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                COMPARE;    # int : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                EQ;         # bool : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF
                  {
                    PUSH bool True; # bool : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }
                  {
                    PUSH nat 0; # nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DUP 3;      # @parameter%approve : nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    CDR;        # nat : nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    COMPARE;    # int : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    EQ;         # bool : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }; # bool : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF
                  {}
                  {
                    PUSH string "FA1.2_UnsafeAllowanceChange"; # string : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    FAILWITH;   # FAILED
                  }; # pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # spender_balance.approvals[param.spender] = param.value # pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP;        # pair (map address nat) nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CAR;        # map address nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP 3;      # @parameter%approve : map address nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CDR;        # nat : map address nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                SOME;       # option nat : map address nat : pair (map address nat) nat : @parameter%approve : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DIG 3;      # @parameter%approve : option nat : map address nat : pair (map address nat) nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CAR;        # address : option nat : map address nat : pair (map address nat) nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                UPDATE;     # map address nat : pair (map address nat) nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                UPDATE 1;   # pair (map address nat) nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat
                # self.data.balances[sp.sender] = spender_balance # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat
                DUP;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat
                GET 3;      # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat
                DIG 2;      # pair (map address nat) nat : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                SOME;       # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                SENDER;     # @sender : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                UPDATE;     # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                UPDATE 3;   # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
              }
              {
                DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%burn : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                DROP;       # @parameter%burn : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                # == burn ==
                # assert self.is_administrator_(sp.sender), "Fa1.2_NotAdmin" # @parameter%burn : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                DIG 2;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%burn : @storage
                SENDER;     # @sender : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%burn : @storage
                SWAP;       # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%burn : @storage
                DIG 3;      # @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%burn
                DIG 2;      # @sender : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%burn
                PAIR;       # pair @sender @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%burn
                EXEC;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%burn
                UNPAIR;     # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%burn
                SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : bool : @parameter%burn
                DUG 2;      # bool : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF
                  {}
                  {
                    PUSH string "Fa1.2_NotAdmin"; # string : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    FAILWITH;   # FAILED
                  }; # @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # receiver_balance = self.data.balances.get( # @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP 2;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                GET 3;      # big_map address (pair (map address nat) nat) : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP 2;      # @parameter%burn : big_map address (pair (map address nat) nat) : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CAR;        # address : big_map address (pair (map address nat) nat) : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                GET;        # option (pair (map address nat) nat) : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF_NONE
                  {
                    PUSH (pair (map address nat) nat) (Pair {} 0); # pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }
                  {}; # pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # receiver_balance.balance = sp.as_nat( # pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP 2;      # @parameter%burn : pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CDR;        # nat : pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP 2;      # pair (map address nat) nat : nat : pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CDR;        # nat : nat : pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                SUB;        # int : pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                ISNAT;      # option nat : pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF_NONE
                  {
                    PUSH string "FA1.2_InsufficientBalance"; # string : pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                UPDATE 2;   # pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # self.data.balances[param.address] = receiver_balance # pair (map address nat) nat : @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DIG 2;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%burn
                DUP;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%burn
                GET 3;      # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%burn
                DIG 2;      # pair (map address nat) nat : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%burn
                SOME;       # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%burn
                DUP 4;      # @parameter%burn : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%burn
                CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%burn
                UPDATE;     # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%burn
                UPDATE 3;   # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%burn
                SWAP;       # @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # self.data.total_supply = sp.as_nat(self.data.total_supply - param.value) # @parameter%burn : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                CDR;        # nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                DUP 2;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                GET 10;     # nat : nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                SUB;        # int : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                ISNAT;      # option nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF_NONE
                  {
                    PUSH int 250; # int : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    FAILWITH;   # FAILED
                  }
                  {}; # @some : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                UPDATE 10;  # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
              }; # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
            NIL operation; # list operation : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
          }
          {
            DIG 3;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter.left.right : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
            DROP;       # @parameter.left.right : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
            IF_LEFT
              {
                DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getAdministrator : @storage
                DROP;       # @parameter%getAdministrator : @storage
                # == getAdministrator ==
                # sp.transfer(self.data.administrator, sp.tez(0), sp.snd(param)) # @parameter%getAdministrator : @storage
                CDR;        # contract address : @storage
                NIL operation; # list operation : contract address : @storage
                SWAP;       # contract address : list operation : @storage
                PUSH mutez 0; # mutez : contract address : list operation : @storage
                DUP 4;      # @storage : mutez : contract address : list operation : @storage
                CAR;        # address : mutez : contract address : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getAllowance : @storage
                    DROP;       # @parameter%getAllowance : @storage
                    # == getAllowance ==
                    # (args, callback) = param # @parameter%getAllowance : @storage
                    UNPAIR;     # pair (address %owner) (address %spender) : contract nat : @storage
                    # result = self.data.balances.get( # pair (address %owner) (address %spender) : contract nat : @storage
                    DUP 3;      # @storage : pair (address %owner) (address %spender) : contract nat : @storage
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %owner) (address %spender) : contract nat : @storage
                    DUP 2;      # pair (address %owner) (address %spender) : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %owner) (address %spender) : contract nat : @storage
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (address %owner) (address %spender) : contract nat : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : pair (address %owner) (address %spender) : contract nat : @storage
                    IF_NONE
                      {
                        PUSH (pair (map address nat) nat) (Pair {} 0); # pair (map address nat) nat : pair (address %owner) (address %spender) : contract nat : @storage
                      }
                      {}; # pair (map address nat) nat : pair (address %owner) (address %spender) : contract nat : @storage
                    CAR;        # map address nat : pair (address %owner) (address %spender) : contract nat : @storage
                    SWAP;       # pair (address %owner) (address %spender) : map address nat : contract nat : @storage
                    CDR;        # address : map address nat : contract nat : @storage
                    GET;        # option nat : contract nat : @storage
                    IF_NONE
                      {
                        PUSH nat 0; # nat : contract nat : @storage
                      }
                      {}; # nat : contract nat : @storage
                    # sp.transfer(result, sp.tez(0), callback) # nat : contract nat : @storage
                    NIL operation; # list operation : nat : contract nat : @storage
                    DIG 2;      # contract nat : list operation : nat : @storage
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                    DIG 3;      # nat : mutez : contract nat : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }
                  {
                    DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getBalance : @storage
                    DROP;       # @parameter%getBalance : @storage
                    # == getBalance ==
                    # (address, callback) = param # @parameter%getBalance : @storage
                    UNPAIR;     # address : contract nat : @storage
                    # result = self.data.balances.get( # address : contract nat : @storage
                    DUP 3;      # @storage : address : contract nat : @storage
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : address : contract nat : @storage
                    SWAP;       # address : big_map address (pair (map %approvals address nat) (nat %balance)) : contract nat : @storage
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : contract nat : @storage
                    IF_NONE
                      {
                        PUSH (pair (map address nat) nat) (Pair {} 0); # pair (map address nat) nat : contract nat : @storage
                      }
                      {}; # pair (map address nat) nat : contract nat : @storage
                    CDR;        # nat : contract nat : @storage
                    # sp.transfer(result, sp.tez(0), callback) # nat : contract nat : @storage
                    NIL operation; # list operation : nat : contract nat : @storage
                    DIG 2;      # contract nat : list operation : nat : @storage
                    PUSH mutez 0; # mutez : contract nat : list operation : nat : @storage
                    DIG 3;      # nat : mutez : contract nat : list operation : @storage
                    TRANSFER_TOKENS; # operation : list operation : @storage
                    CONS;       # list operation : @storage
                  }; # list operation : @storage
              }; # list operation : @storage
          }; # list operation : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getTotalSupply : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                DROP;       # @parameter%getTotalSupply : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                DIG 2;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%getTotalSupply : @storage
                DROP;       # @parameter%getTotalSupply : @storage
                # == getTotalSupply ==
                # sp.transfer(self.data.total_supply, sp.tez(0), sp.snd(param)) # @parameter%getTotalSupply : @storage
                CDR;        # contract nat : @storage
                NIL operation; # list operation : contract nat : @storage
                SWAP;       # contract nat : list operation : @storage
                PUSH mutez 0; # mutez : contract nat : list operation : @storage
                DUP 4;      # @storage : mutez : contract nat : list operation : @storage
                GET 10;     # nat : mutez : contract nat : list operation : @storage
                TRANSFER_TOKENS; # operation : list operation : @storage
                CONS;       # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%mint : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DROP;       # @parameter%mint : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # == mint ==
                    # assert self.is_administrator_(sp.sender), "Fa1.2_NotAdmin" # @parameter%mint : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 2;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%mint : @storage
                    SENDER;     # @sender : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%mint : @storage
                    SWAP;       # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%mint : @storage
                    DIG 3;      # @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%mint
                    DIG 2;      # @sender : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%mint
                    PAIR;       # pair @sender @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%mint
                    EXEC;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%mint
                    UNPAIR;     # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : bool : @parameter%mint
                    DUG 2;      # bool : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    IF
                      {}
                      {
                        PUSH string "Fa1.2_NotAdmin"; # string : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        FAILWITH;   # FAILED
                      }; # @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    # receiver_balance = self.data.balances.get( # @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DUP 2;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    GET 3;      # big_map address (pair (map address nat) nat) : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DUP 2;      # @parameter%mint : big_map address (pair (map address nat) nat) : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    CAR;        # address : big_map address (pair (map address nat) nat) : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    GET;        # option (pair (map address nat) nat) : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    IF_NONE
                      {
                        PUSH (pair (map address nat) nat) (Pair {} 0); # pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                      }
                      {}; # pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    # receiver_balance.balance += param.value # pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DUP;        # pair (map address nat) nat : pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    CDR;        # nat : pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DUP 3;      # @parameter%mint : nat : pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    CDR;        # nat : nat : pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    ADD;        # nat : pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UPDATE 2;   # pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    # self.data.balances[param.address] = receiver_balance # pair (map address nat) nat : @parameter%mint : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DIG 2;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%mint
                    DUP;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%mint
                    GET 3;      # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%mint
                    DIG 2;      # pair (map address nat) nat : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    SOME;       # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    DUP 4;      # @parameter%mint : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    UPDATE;     # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    UPDATE 3;   # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    # self.data.total_supply += param.value # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    DUP;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    GET 10;     # nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%mint
                    DIG 2;      # @parameter%mint : nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    CDR;        # nat : nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    ADD;        # nat : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UPDATE 10;  # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }
                  {
                    DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setAdministrator : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DROP;       # @parameter%setAdministrator : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # == setAdministrator ==
                    # assert self.is_administrator_(sp.sender), "Fa1.2_NotAdmin" # @parameter%setAdministrator : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 2;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setAdministrator : @storage
                    SENDER;     # @sender : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setAdministrator : @storage
                    SWAP;       # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%setAdministrator : @storage
                    DIG 3;      # @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%setAdministrator
                    DIG 2;      # @sender : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setAdministrator
                    PAIR;       # pair @sender @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setAdministrator
                    EXEC;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%setAdministrator
                    UNPAIR;     # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%setAdministrator
                    SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : bool : @parameter%setAdministrator
                    DUG 2;      # bool : @parameter%setAdministrator : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    IF
                      {}
                      {
                        PUSH string "Fa1.2_NotAdmin"; # string : @parameter%setAdministrator : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        FAILWITH;   # FAILED
                      }; # @parameter%setAdministrator : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    # self.data.administrator = params # @parameter%setAdministrator : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UPDATE 1;   # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }; # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                NIL operation; # list operation : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
              }; # list operation : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
          }
          {
            IF_LEFT
              {
                DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setPause : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                DROP;       # @parameter%setPause : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                # == setPause ==
                # assert self.is_administrator_(sp.sender), "Fa1.2_NotAdmin" # @parameter%setPause : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                DIG 2;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setPause : @storage
                SENDER;     # @sender : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setPause : @storage
                SWAP;       # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%setPause : @storage
                DIG 3;      # @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%setPause
                DIG 2;      # @sender : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setPause
                PAIR;       # pair @sender @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%setPause
                EXEC;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%setPause
                UNPAIR;     # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%setPause
                SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : bool : @parameter%setPause
                DUG 2;      # bool : @parameter%setPause : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                IF
                  {}
                  {
                    PUSH string "Fa1.2_NotAdmin"; # string : @parameter%setPause : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    FAILWITH;   # FAILED
                  }; # @parameter%setPause : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                # self.data.paused = param # @parameter%setPause : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                UPDATE 7;   # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
              }
              {
                IF_LEFT
                  {
                    # == transfer ==
                    # balance_from = self.data.balances.get( # @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 2;      # @storage : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 2;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CAR;        # address : big_map address (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH (pair (map address nat) nat) (Pair {} 0); # pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }
                      {}; # pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # balance_to = self.data.balances.get( # pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @storage : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @parameter%transfer : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 3;      # address : big_map address (pair (map %approvals address nat) (nat %balance)) : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET;        # option (pair (map %approvals address nat) (nat %balance)) : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH (pair (map address nat) nat) (Pair {} 0); # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                      }
                      {}; # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # balance_from.balance = sp.as_nat( # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # @parameter%transfer : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 4;      # nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 3;      # pair (map address nat) nat : nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CDR;        # nat : nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SUB;        # int : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    ISNAT;      # option nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF_NONE
                      {
                        PUSH string "FA1.2_InsufficientBalance"; # string : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 2;      # pair (map address nat) nat : @some : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # @some : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UPDATE 2;   # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # balance_to.balance += param.value # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP;        # pair (map address nat) nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    CDR;        # nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 4;      # @parameter%transfer : nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    GET 4;      # nat : nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    ADD;        # nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UPDATE 2;   # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # if not self.is_administrator_(sp.sender): # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUP 6;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SENDER;     # @sender : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    SWAP;       # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : @storage : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 5;      # @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 2;      # @sender : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    PAIR;       # pair @sender @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    EXEC;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    UNPAIR;     # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 6;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 6;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                    DIG 3;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : bool : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                    DUG 6;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : bool : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DUG 6;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : bool : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DUG 6;      # bool : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    IF
                      {
                        DIG 4;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DROP;       # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DIG 4;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        DROP;       # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                      }
                      {
                        DIG 5;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DROP;       # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        # assert not self.is_paused_(), "FA1.2_Paused" # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                        DIG 4;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        UNIT;       # unit : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        SWAP;       # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : unit : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        DIG 5;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : unit : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                        DIG 2;      # unit : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                        PAIR;       # pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                        EXEC;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                        UNPAIR;     # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                        SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : bool : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                        DUG 4;      # bool : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        IF
                          {
                            PUSH string "FA1.2_Paused"; # string : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            FAILWITH;   # FAILED
                          }
                          {}; # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        # if param.from_ != sp.sender: # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        SENDER;     # @sender : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        DUP 4;      # @parameter%transfer : @sender : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        CAR;        # address : @sender : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        COMPARE;    # int : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        NEQ;        # bool : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        IF
                          {
                            # balance_from.approvals[sp.sender] = sp.as_nat( # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            DUP 2;      # pair (map address nat) nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            DUP;        # pair (map address nat) nat : pair (map address nat) nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            CAR;        # map address nat : pair (map address nat) nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            DUP 5;      # @parameter%transfer : map address nat : pair (map address nat) nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            GET 4;      # nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            DIG 4;      # pair (map address nat) nat : nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            CAR;        # map address nat : nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            SENDER;     # @sender : map address nat : nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            GET;        # option nat : nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            IF_NONE
                              {
                                PUSH int 125; # int : nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            SUB;        # int : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            ISNAT;      # option nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            IF_NONE
                              {
                                PUSH string "FA1.2_NotAllowed"; # string : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                                FAILWITH;   # FAILED
                              }
                              {}; # @some : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            SOME;       # option nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            SENDER;     # @sender : option nat : map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            UPDATE;     # map address nat : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            UPDATE 1;   # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                            SWAP;       # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                          }
                          {}; # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                      }; # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    # self.data.balances[param.from_] = balance_from # pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    DIG 3;      # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                    DUP;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                    GET 3;      # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : pair (map address nat) nat : @parameter%transfer
                    DIG 3;      # pair (map address nat) nat : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    SOME;       # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    DUP 5;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    CAR;        # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    UPDATE;     # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    UPDATE 3;   # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    # self.data.balances[param.to_] = balance_to # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    DUP;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    GET 3;      # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair (map address nat) nat : @parameter%transfer
                    DIG 2;      # pair (map address nat) nat : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer
                    SOME;       # option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%transfer
                    DIG 3;      # @parameter%transfer : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    GET 3;      # address : option (pair (map address nat) nat) : big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UPDATE;     # big_map address (pair (map address nat) nat) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UPDATE 3;   # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }
                  {
                    DIG 2;      # lambda (pair unit (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%update_metadata : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DROP;       # @parameter%update_metadata : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    # == update_metadata ==
                    # assert self.is_administrator_(sp.sender), "Fa1.2_NotAdmin" # @parameter%update_metadata : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))))
                    DIG 2;      # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%update_metadata : @storage
                    SENDER;     # @sender : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%update_metadata : @storage
                    SWAP;       # lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%update_metadata : @storage
                    DIG 3;      # @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @sender : @parameter%update_metadata
                    DIG 2;      # @sender : @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%update_metadata
                    PAIR;       # pair @sender @storage : lambda (pair address (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) (pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))) : @parameter%update_metadata
                    EXEC;       # pair bool (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))) : @parameter%update_metadata
                    UNPAIR;     # bool : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%update_metadata
                    SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : bool : @parameter%update_metadata
                    DUG 2;      # bool : @parameter%update_metadata : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    IF
                      {}
                      {
                        PUSH string "Fa1.2_NotAdmin"; # string : @parameter%update_metadata : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                        FAILWITH;   # FAILED
                      }; # @parameter%update_metadata : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    SWAP;       # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%update_metadata
                    # self.data.metadata[key] = value # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%update_metadata
                    DUP;        # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%update_metadata
                    GET 5;      # big_map string bytes : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%update_metadata
                    DUP 3;      # @parameter%update_metadata : big_map string bytes : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%update_metadata
                    CDR;        # bytes : big_map string bytes : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%update_metadata
                    SOME;       # option bytes : big_map string bytes : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))) : @parameter%update_metadata
                    DIG 3;      # @parameter%update_metadata : option bytes : big_map string bytes : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    CAR;        # string : option bytes : big_map string bytes : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UPDATE;     # big_map string bytes : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                    UPDATE 5;   # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
                  }; # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
              }; # pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
            NIL operation; # list operation : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
          }; # list operation : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
      }; # list operation : pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat))))
    PAIR;       # pair (list operation) (pair address (pair (big_map address (pair (map address nat) nat)) (pair (big_map string bytes) (pair bool (pair (big_map nat (pair nat (map string bytes))) nat)))))
  };
view
  "get_administrator" unit address
  {
    CDR;        # @storage
    # return self.data.administrator # @storage
    CAR;        # address
  };